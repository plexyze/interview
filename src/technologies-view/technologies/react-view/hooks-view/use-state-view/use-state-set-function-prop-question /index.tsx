import { Code, Question } from '../../../../../../components';

const CODE = `const [name, setName] = useState('Edward');

function handleClick() {
  setName('Taylor');
  setAge(a => a + 1);
  // ...`;

export const UseStateSetFunctionParamQuestion = () => {
  return (
    <Question question='Что передают в качестве параметра в set функцию setSomething(nextState)?'>
      <Code code={CODE} />
      <p>
        nextState: значение, которым должно быть состояние. Это может быть
        значение любого типа, но функции имеют особое поведение.
      </p>
      <p>
        Если вы передадите функцию как nextState, она будет рассматриваться как
        функция обновления. Она должна быть чистой, должна принимать предыдущее
        состояние в качестве единственного аргумента и должен возвращать
        следующее состояние. React поместит вашу функцию обновления в очередь и
        повторно отобразит ваш компонент. Во время следующего рендеринга React
        рассчитает следующее состояние, применив все средства обновления,
        находящиеся в очереди, к предыдущему состоянию.
      </p>
    </Question>
  );
};
